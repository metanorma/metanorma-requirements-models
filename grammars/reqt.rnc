#Presupposes isodoc.rnc, is included in it
#include "isodoc.rnc" { }

requirement = element requirement { RequirementType }
recommendation = element recommendation { RequirementType }
permission = element permission { RequirementType }

RequirementType =  
  attribute obligation { ObligationType }?,
  attribute unnumbered { xsd:boolean }?,
  attribute number { text }?,
  attribute subsequence { text }?,
  attribute keep-with-next { xsd:boolean }?,
  attribute keep-lines-together { xsd:boolean }?,
  attribute id { xsd:ID },
  attribute filename { text }?,
  attribute model { text }?,
  attribute type { text }?,
  attribute tag { text }?,
  attribute multilingual-rendering { MultilingualRenderingType }?,
  reqtitle?, label?, subject*, reqinherit*, classification*,
  ( measurementtarget | specification | verification | import | description | component)*,
  reqt_references?,
  ( requirement | recommendation | permission )*


reqtitle = element title { FormattedString }
label = element label { TextElement+ }
subject = element subject { TextElement+ }
reqinherit = element inherit { TextElement+ }

measurementtarget = element measurement-target { RequirementSubpart }
specification = element specification { RequirementSubpart }
verification = element verification { RequirementSubpart }
import = element import { RequirementSubpart }
description = element description { RequirementSubpart }
component = element component { 
  attribute class { text },
  RequirementSubpart 
}

reqt_references = element references { bibitem+ }

RequirementSubpart = 
  attribute type { text }?,
  attribute exclude { xsd:boolean }?,
  attribute keep-with-next { xsd:boolean }?,
  attribute keep-lines-together { xsd:boolean }?,
  attribute tag { text }?,
  attribute multilingual-rendering { MultilingualRenderingType }?,
  BasicBlock+


ObligationType = ( "requirement" | "recommendation" | "permission" )

classification = element classification {
  classification_tag, classification_value
}

classification_tag = element tag { text }
classification_value = element value { text }

